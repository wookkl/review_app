# Generated by Django 3.1.3 on 2020-11-10 10:47

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True)),
                ('preference', models.CharField(blank=True, choices=[('mv', 'Movie'), ('bk', 'Book')], max_length=2)),
                ('language', models.CharField(blank=True, choices=[('en', 'English'), ('kr', 'Korean'), ('jp', 'Japanese'), ('cn', 'Chinese')], max_length=2)),
                ('favorite_book_genres', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Fantasy'), (2, 'Adventure'), (3, 'Romance'), (4, 'Contemporary'), (5, 'Dystopian'), (6, 'Mystery'), (7, 'Horror'), (8, 'Thriller'), (9, 'Paranormal'), (10, 'Historical fiction'), (11, 'Science Fiction'), (12, 'Memoir'), (13, 'Cooking'), (14, 'Art'), (15, 'Self-help'), (16, 'Development'), (17, 'Motivational'), (18, 'Health'), (19, 'History'), (20, 'Travel'), (21, 'Guide'), (22, 'Families & Relationships'), (23, 'Humor'), (24, 'Childrenâ€™s')], max_length=62, null=True)),
                ('favorite_movie_genres', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Action'), (2, 'Adventure'), (3, 'Comedy'), (4, 'Crime'), (5, 'Drama'), (6, 'Epic'), (7, 'Musical'), (8, 'Science Fiction'), (9, 'War'), (10, 'Westurn')], max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
